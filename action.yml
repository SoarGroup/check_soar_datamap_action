name: "Run VisualSoar Datamap Validation"
description: "Validate Soar project code against its datamap using VisualSoar"
author: "Nathan Glenn"
inputs:
  projectPath:
    description: "Path to the Soar project file to validate."
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout VisualSoar
      uses: actions/checkout@v3
      with:
        repository: "SoarGroup/VisualSoar"
        path: "VisualSoar"

    - name: Report VisualSoar Version and Git SHA
      shell: bash
      run: |
        cd VisualSoar
        ./gradlew properties -q | grep "version:" > visualsoar_version.txt
        echo "VisualSoar version: $(cat visualsoar_version.txt)"
        git rev-parse HEAD > visualsoar_git_sha.txt
        echo "VisualSoar git sha: $(cat visualsoar_git_sha.txt)"

    - uses: actions/setup-java@v4
      with:
        distribution: "temurin"
        java-version: "21"

    - name: Run Datamap Validation
      shell: bash
      run: |
        cd VisualSoar
        abs_project_path="${{ github.workspace }}/${{ inputs.projectPath }}"
        ./gradlew run --args="--check productionsAgainstDatamap --project \"$abs_project_path\" --json" | tee visualsoar_dm_validation_log.jsonl
        gradle_exit_code=${PIPESTATUS[0]}
        if [ ! -f visualsoar_dm_validation_log.jsonl ]; then
          echo "Error: visualsoar_dm_validation_log.jsonl was not created."
          exit 1
        fi
        exit $gradle_exit_code

    - name: Annotate with Validation Results
      if: failure()
      shell: bash
      run: |
        ./parse_diagnostics.sh < visualsoar_dm_validation_log.jsonl

    - name: Upload Validation Log
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: visualsoar_dm_validation_log.jsonl
        path: visualsoar_dm_validation_log.jsonl

    - name: Validation Passed
      if: success()
      shell: bash
      run: echo "Datamap validation completed successfully!"
